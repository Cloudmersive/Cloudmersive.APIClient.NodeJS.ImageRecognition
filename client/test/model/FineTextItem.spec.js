/**
 * imageapi
 * Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudmersiveImageApiClient);
  }
}(this, function(expect, CloudmersiveImageApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudmersiveImageApiClient.FineTextItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FineTextItem', function() {
    it('should create an instance of FineTextItem', function() {
      // uncomment below and update the code to test FineTextItem
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be.a(CloudmersiveImageApiClient.FineTextItem);
    });

    it('should have the property topLeftX (base name: "TopLeftX")', function() {
      // uncomment below and update the code to test the property topLeftX
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be();
    });

    it('should have the property topLeftY (base name: "TopLeftY")', function() {
      // uncomment below and update the code to test the property topLeftY
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be();
    });

    it('should have the property topRightX (base name: "TopRightX")', function() {
      // uncomment below and update the code to test the property topRightX
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be();
    });

    it('should have the property topRightY (base name: "TopRightY")', function() {
      // uncomment below and update the code to test the property topRightY
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be();
    });

    it('should have the property bottomLeftX (base name: "BottomLeftX")', function() {
      // uncomment below and update the code to test the property bottomLeftX
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be();
    });

    it('should have the property bottomLeftY (base name: "BottomLeftY")', function() {
      // uncomment below and update the code to test the property bottomLeftY
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be();
    });

    it('should have the property bottomRightX (base name: "BottomRightX")', function() {
      // uncomment below and update the code to test the property bottomRightX
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be();
    });

    it('should have the property bottomRightY (base name: "BottomRightY")', function() {
      // uncomment below and update the code to test the property bottomRightY
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "Width")', function() {
      // uncomment below and update the code to test the property width
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "Height")', function() {
      // uncomment below and update the code to test the property height
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be();
    });

    it('should have the property angle (base name: "Angle")', function() {
      // uncomment below and update the code to test the property angle
      //var instane = new CloudmersiveImageApiClient.FineTextItem();
      //expect(instance).to.be();
    });

  });

}));
