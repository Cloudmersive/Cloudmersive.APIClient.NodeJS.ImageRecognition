/**
 * imageapi
 * Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Face', 'model/FaceLocateResponse', 'model/ImageDescriptionResponse', 'model/NsfwResult', 'model/RecognitionOutcome', 'api/FaceApi', 'api/NsfwApi', 'api/RecognizeApi', 'api/ResizeApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Face'), require('./model/FaceLocateResponse'), require('./model/ImageDescriptionResponse'), require('./model/NsfwResult'), require('./model/RecognitionOutcome'), require('./api/FaceApi'), require('./api/NsfwApi'), require('./api/RecognizeApi'), require('./api/ResizeApi'));
  }
}(function(ApiClient, Face, FaceLocateResponse, ImageDescriptionResponse, NsfwResult, RecognitionOutcome, FaceApi, NsfwApi, RecognizeApi, ResizeApi) {
  'use strict';

  /**
   * Image_Recognition_and_Processing_APIs_let_you_use_Machine_Learning_to_recognize_and_process_images_and_also_perform_useful_image_modification_operations_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var CloudmersiveImageApiClient = require('index'); // See note below*.
   * var xxxSvc = new CloudmersiveImageApiClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new CloudmersiveImageApiClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new CloudmersiveImageApiClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new CloudmersiveImageApiClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.8
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Face model constructor.
     * @property {module:model/Face}
     */
    Face: Face,
    /**
     * The FaceLocateResponse model constructor.
     * @property {module:model/FaceLocateResponse}
     */
    FaceLocateResponse: FaceLocateResponse,
    /**
     * The ImageDescriptionResponse model constructor.
     * @property {module:model/ImageDescriptionResponse}
     */
    ImageDescriptionResponse: ImageDescriptionResponse,
    /**
     * The NsfwResult model constructor.
     * @property {module:model/NsfwResult}
     */
    NsfwResult: NsfwResult,
    /**
     * The RecognitionOutcome model constructor.
     * @property {module:model/RecognitionOutcome}
     */
    RecognitionOutcome: RecognitionOutcome,
    /**
     * The FaceApi service constructor.
     * @property {module:api/FaceApi}
     */
    FaceApi: FaceApi,
    /**
     * The NsfwApi service constructor.
     * @property {module:api/NsfwApi}
     */
    NsfwApi: NsfwApi,
    /**
     * The RecognizeApi service constructor.
     * @property {module:api/RecognizeApi}
     */
    RecognizeApi: RecognizeApi,
    /**
     * The ResizeApi service constructor.
     * @property {module:api/ResizeApi}
     */
    ResizeApi: ResizeApi
  };

  return exports;
}));
